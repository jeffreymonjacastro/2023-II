$date
	Mon Oct 30 14:35:12 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top_tb $end
$var wire 32 ! WriteData [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 # DataAdr [31:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$scope module dut $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 & WriteData [31:0] $end
$var wire 32 ' ReadData [31:0] $end
$var wire 32 ( PC [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 ) Instr [31:0] $end
$var wire 32 * DataAdr [31:0] $end
$scope module arm $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 + WriteData [31:0] $end
$var wire 1 , RegWrite $end
$var wire 2 - RegSrc [1:0] $end
$var wire 32 . ReadData [31:0] $end
$var wire 1 / PCSrc $end
$var wire 32 0 PC [31:0] $end
$var wire 1 1 MemtoReg $end
$var wire 1 " MemWrite $end
$var wire 1 2 LDRB $end
$var wire 32 3 Instr [31:0] $end
$var wire 2 4 ImmSrc [1:0] $end
$var wire 1 5 ALUSrc $end
$var wire 32 6 ALUResult [31:0] $end
$var wire 4 7 ALUFlags [3:0] $end
$var wire 3 8 ALUControl [2:0] $end
$scope module c $end
$var wire 20 9 Instr [31:12] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 , RegWrite $end
$var wire 1 : RegW $end
$var wire 2 ; RegSrc [1:0] $end
$var wire 1 / PCSrc $end
$var wire 1 < PCS $end
$var wire 1 1 MemtoReg $end
$var wire 1 " MemWrite $end
$var wire 1 = MemW $end
$var wire 1 2 LDRB $end
$var wire 2 > ImmSrc [1:0] $end
$var wire 2 ? FlagW [1:0] $end
$var wire 1 5 ALUSrc $end
$var wire 4 @ ALUFlags [3:0] $end
$var wire 3 A ALUControl [2:0] $end
$scope module cl $end
$var wire 4 B Cond [3:0] $end
$var wire 2 C FlagWrite [1:0] $end
$var wire 1 " MemWrite $end
$var wire 1 / PCSrc $end
$var wire 1 , RegWrite $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 : RegW $end
$var wire 1 < PCS $end
$var wire 1 = MemW $end
$var wire 4 D Flags [3:0] $end
$var wire 2 E FlagW [1:0] $end
$var wire 1 F CondEx $end
$var wire 4 G ALUFlags [3:0] $end
$scope module cc $end
$var wire 4 H Cond [3:0] $end
$var wire 4 I Flags [3:0] $end
$var wire 1 J ge $end
$var wire 1 K zero $end
$var wire 1 L overflow $end
$var wire 1 M neg $end
$var wire 1 N carry $end
$var reg 1 F CondEx $end
$upscope $end
$scope module flagreg0 $end
$var wire 1 $ clk $end
$var wire 2 O d [1:0] $end
$var wire 1 P en $end
$var wire 1 % reset $end
$var reg 2 Q q [1:0] $end
$upscope $end
$scope module flagreg1 $end
$var wire 1 $ clk $end
$var wire 2 R d [1:0] $end
$var wire 1 S en $end
$var wire 1 % reset $end
$var reg 2 T q [1:0] $end
$upscope $end
$upscope $end
$scope module dec $end
$var wire 6 U Funct [5:0] $end
$var wire 2 V Op [1:0] $end
$var wire 1 < PCS $end
$var wire 4 W Rd [3:0] $end
$var wire 1 : RegW $end
$var wire 2 X RegSrc [1:0] $end
$var wire 1 1 MemtoReg $end
$var wire 1 = MemW $end
$var wire 1 2 LDRB $end
$var wire 2 Y ImmSrc [1:0] $end
$var wire 1 Z Branch $end
$var wire 1 5 ALUSrc $end
$var wire 1 [ ALUOp $end
$var reg 3 \ ALUControl [2:0] $end
$var reg 2 ] FlagW [1:0] $end
$var reg 11 ^ controls [10:0] $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 3 _ ALUControl [2:0] $end
$var wire 1 5 ALUSrc $end
$var wire 2 ` ImmSrc [1:0] $end
$var wire 1 2 LDRB $end
$var wire 1 1 MemtoReg $end
$var wire 1 / PCSrc $end
$var wire 2 a RegSrc [1:0] $end
$var wire 1 , RegWrite $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 b WriteData [31:0] $end
$var wire 32 c SrcB [31:0] $end
$var wire 32 d SrcA [31:0] $end
$var wire 32 e Result [31:0] $end
$var wire 32 f ReadData2 [31:0] $end
$var wire 32 g ReadData [31:0] $end
$var wire 4 h RA2 [3:0] $end
$var wire 4 i RA1 [3:0] $end
$var wire 32 j PCPlus8 [31:0] $end
$var wire 32 k PCPlus4 [31:0] $end
$var wire 32 l PCNext [31:0] $end
$var wire 32 m PC [31:0] $end
$var wire 32 n Instr [31:0] $end
$var wire 32 o ExtImm [31:0] $end
$var wire 32 p ALUResult [31:0] $end
$var wire 4 q ALUFlags [3:0] $end
$var reg 32 r ReadDataLDRB [31:0] $end
$scope module alu $end
$var wire 3 s ALUControl [2:0] $end
$var wire 1 t carry $end
$var wire 1 u overflow $end
$var wire 1 v zero $end
$var wire 32 w sum [31:0] $end
$var wire 1 x negative $end
$var wire 32 y b [31:0] $end
$var wire 32 z a [31:0] $end
$var wire 4 { ALUFlags [3:0] $end
$var reg 32 | Result [31:0] $end
$upscope $end
$scope module ext $end
$var wire 2 } ImmSrc [1:0] $end
$var wire 24 ~ Instr [23:0] $end
$var reg 32 !" ExtImm [31:0] $end
$upscope $end
$scope module ldrbmux $end
$var wire 32 "" d1 [31:0] $end
$var wire 1 2 s $end
$var wire 32 #" y [31:0] $end
$var wire 32 $" d0 [31:0] $end
$upscope $end
$scope module pcadd1 $end
$var wire 32 %" b [31:0] $end
$var wire 32 &" y [31:0] $end
$var wire 32 '" a [31:0] $end
$upscope $end
$scope module pcadd2 $end
$var wire 32 (" a [31:0] $end
$var wire 32 )" b [31:0] $end
$var wire 32 *" y [31:0] $end
$upscope $end
$scope module pcmux $end
$var wire 32 +" d0 [31:0] $end
$var wire 1 / s $end
$var wire 32 ," y [31:0] $end
$var wire 32 -" d1 [31:0] $end
$upscope $end
$scope module pcreg $end
$var wire 1 $ clk $end
$var wire 32 ." d [31:0] $end
$var wire 1 % reset $end
$var reg 32 /" q [31:0] $end
$upscope $end
$scope module ra1mux $end
$var wire 4 0" d0 [3:0] $end
$var wire 4 1" d1 [3:0] $end
$var wire 1 2" s $end
$var wire 4 3" y [3:0] $end
$upscope $end
$scope module ra2mux $end
$var wire 4 4" d0 [3:0] $end
$var wire 4 5" d1 [3:0] $end
$var wire 1 6" s $end
$var wire 4 7" y [3:0] $end
$upscope $end
$scope module resmux $end
$var wire 32 8" d0 [31:0] $end
$var wire 32 9" d1 [31:0] $end
$var wire 1 1 s $end
$var wire 32 :" y [31:0] $end
$upscope $end
$scope module rf $end
$var wire 1 $ clk $end
$var wire 32 ;" r15 [31:0] $end
$var wire 4 <" ra1 [3:0] $end
$var wire 4 =" ra2 [3:0] $end
$var wire 4 >" wa3 [3:0] $end
$var wire 32 ?" wd3 [31:0] $end
$var wire 1 , we3 $end
$var wire 32 @" rd2 [31:0] $end
$var wire 32 A" rd1 [31:0] $end
$upscope $end
$scope module srcbmux $end
$var wire 32 B" d0 [31:0] $end
$var wire 32 C" d1 [31:0] $end
$var wire 1 5 s $end
$var wire 32 D" y [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module dmem $end
$var wire 32 E" a [31:0] $end
$var wire 1 $ clk $end
$var wire 32 F" rd [31:0] $end
$var wire 32 G" wd [31:0] $end
$var wire 1 " we $end
$upscope $end
$scope module imem $end
$var wire 32 H" a [31:0] $end
$var wire 32 I" rd [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11100000010011110000000000001111 I"
b0 H"
b1000 G"
bx F"
b0 E"
b1000 D"
b1111 C"
b1000 B"
b1000 A"
b1000 @"
b0 ?"
b0 >"
b1111 ="
b1111 <"
b1000 ;"
b0 :"
bx 9"
b0 8"
b1111 7"
06"
b0 5"
b1111 4"
b1111 3"
02"
b1111 1"
b1111 0"
b0 /"
b100 ."
b0 -"
b100 ,"
b100 +"
b1000 *"
b100 )"
b100 ("
b0 '"
b100 &"
b100 %"
bx $"
bx #"
bx ""
b1111 !"
b10011110000000000001111 ~
b0 }
b0 |
b1x0 {
b1000 z
b1000 y
0x
b0 w
1v
0u
xt
b1 s
bx r
b1x0 q
b0 p
b1111 o
b11100000010011110000000000001111 n
b0 m
b100 l
b100 k
b1000 j
b1111 i
b1111 h
bx g
bx f
b0 e
b1000 d
b1000 c
b1000 b
b0 a
b0 `
b1 _
b10010 ^
b0 ]
b1 \
1[
0Z
b0 Y
b0 X
b0 W
b0 V
b100 U
b0 T
0S
b1 R
b0 Q
0P
bx0 O
0N
0M
0L
0K
1J
b0 I
b1110 H
b1x0 G
1F
b0 E
b0 D
b0 C
b1110 B
b1 A
b1x0 @
b0 ?
b0 >
0=
0<
b0 ;
1:
b11100000010011110000 9
b1 8
b1x0 7
b0 6
05
b0 4
b11100000010011110000000000001111 3
02
01
b0 0
0/
bx .
b0 -
1,
b1000 +
b0 *
b11100000010011110000000000001111 )
b0 (
bx '
b1000 &
1%
0$
b0 #
0"
b1000 !
$end
#5000
1$
#6000
0%
#10000
0$
#15000
0x
15
b0 8
b0 A
b0 \
b0 _
b0 s
b1010010 ^
b11111111 o
b11111111 !"
b11111111 C"
b0 i
b0 3"
b0 <"
b101000 U
b1 W
b0 R
b11111111 e
b11111111 -"
b11111111 :"
b11111111 ?"
b100000000001000011111111 ~
b1 >"
b1 5"
b0 0"
b11100010100000000001 9
b0x0 7
b0x0 @
b0x0 G
b0x0 q
b0x0 {
0v
b11111111 #
b11111111 *
b11111111 6
b11111111 p
b11111111 |
b11111111 8"
b11111111 E"
b11111111 c
b11111111 y
b11111111 D"
b11100010100000000001000011111111 )
b11100010100000000001000011111111 3
b11100010100000000001000011111111 n
b11100010100000000001000011111111 I"
b11111111 w
b0 d
b0 z
b0 A"
b1100 !
b1100 &
b1100 +
b1100 b
b1100 @"
b1100 B"
b1100 G"
b1000 l
b1000 ,"
b1000 ."
b1100 j
b1100 *"
b1100 ;"
b1000 k
b1000 &"
b1000 ("
b1000 +"
b100 (
b100 0
b100 m
b100 '"
b100 /"
b100 H"
1$
#20000
0$
#25000
b111111110 e
b111111110 -"
b111111110 :"
b111111110 ?"
b111111110 #
b111111110 *
b111111110 6
b111111110 p
b111111110 |
b111111110 8"
b111111110 E"
05
b11111111 c
b11111111 y
b11111111 D"
b111111110 w
b11111111 d
b11111111 z
b11111111 A"
b10010 ^
b1 o
b1 !"
b1 C"
b1 h
b1 7"
b1 ="
b1 i
b1 3"
b1 <"
b1000 U
b10 W
b100000010010000000000001 ~
b10 >"
b10 5"
b1 4"
b1 0"
b11100000100000010010 9
b11100000100000010010000000000001 )
b11100000100000010010000000000001 3
b11100000100000010010000000000001 n
b11100000100000010010000000000001 I"
b11111111 !
b11111111 &
b11111111 +
b11111111 b
b11111111 @"
b11111111 B"
b11111111 G"
b1100 l
b1100 ,"
b1100 ."
b10000 j
b10000 *"
b10000 ;"
b1100 k
b1100 &"
b1100 ("
b1100 +"
b1000 (
b1000 0
b1000 m
b1000 '"
b1000 /"
b1000 H"
1$
#30000
0$
#35000
0u
b0 R
bx0 O
0x
b0x0 7
b0x0 @
b0x0 G
b0x0 q
b0x0 {
xt
16"
bx e
bx -"
bx :"
bx ?"
0,
1"
b11000100 c
b11000100 y
b11000100 D"
b11000100 #
b11000100 *
b11000100 6
b11000100 p
b11000100 |
b11000100 8"
b11000100 E"
b10 -
b10 ;
b10 X
b10 a
b1 4
b1 >
b1 Y
b1 `
b1 }
15
11
0:
1=
0[
b111111110 !
b111111110 &
b111111110 +
b111111110 b
b111111110 @"
b111111110 B"
b111111110 G"
b11000100 w
b0 d
b0 z
b0 A"
b0 8
b0 A
b0 \
b0 _
b0 s
b10011101000 ^
b11000100 o
b11000100 !"
b11000100 C"
b10 h
b10 7"
b10 ="
b0 i
b0 3"
b0 <"
b1 V
b11000 U
b100000000010000011000100 ~
b100 4"
b0 0"
b11100101100000000010 9
b11100101100000000010000011000100 )
b11100101100000000010000011000100 3
b11100101100000000010000011000100 n
b11100101100000000010000011000100 I"
b10000 l
b10000 ,"
b10000 ."
b10100 j
b10100 *"
b10100 ;"
b10000 k
b10000 &"
b10000 ("
b10000 +"
b1100 (
b1100 0
b1100 m
b1100 '"
b1100 /"
b1100 H"
1$
#40000
0$
#45000
b0 O
b0 7
b0 @
b0 G
b0 q
b0 {
0t
06"
1,
0"
b110 8
b110 A
b110 \
b110 _
b110 s
b10110010 #
b10110010 *
b10110010 6
b10110010 p
b10110010 |
b10110010 8"
b10110010 E"
b0 -
b0 ;
b0 X
b0 a
b0 4
b0 >
b0 Y
b0 `
b0 }
01
1:
0=
1[
b1001101 c
b1001101 y
b1001101 D"
bx !
bx &
bx +
bx b
bx @"
bx B"
bx G"
b101001100 w
b11111111 d
b11111111 z
b11111111 A"
b1010010 ^
b1001101 o
b1001101 !"
b1001101 C"
b1101 h
b1101 7"
b1101 ="
b1 i
b1 3"
b1 <"
b0 V
b100010 U
b11 W
b1000010011000001001101 ~
b11 >"
b11 5"
b1101 4"
b1 0"
b11100010001000010011 9
b10110010 e
b10110010 -"
b10110010 :"
b10110010 ?"
b11100010001000010011000001001101 )
b11100010001000010011000001001101 3
b11100010001000010011000001001101 n
b11100010001000010011000001001101 I"
b10100 l
b10100 ,"
b10100 ."
bx f
bx #"
bx 9"
b11000 j
b11000 *"
b11000 ;"
b10100 k
b10100 &"
b10100 ("
b10100 +"
b10000 (
b10000 0
b10000 m
b10000 '"
b10000 /"
b10000 H"
bx '
bx .
bx g
bx $"
bx F"
1$
#50000
0$
#55000
b10010 e
b10010 -"
b10010 :"
b10010 ?"
b10010 #
b10010 *
b10010 6
b10010 p
b10010 |
b10010 8"
b10010 E"
b11111 c
b11111 y
b11111 D"
b11100 !
b11100 &
b11100 +
b11100 b
b11100 @"
b11100 B"
b11100 G"
b11010001 w
b10110010 d
b10110010 z
b10110010 A"
b10 8
b10 A
b10 \
b10 _
b10 s
b11111 o
b11111 !"
b11111 C"
b1111 h
b1111 7"
b1111 ="
b11 i
b11 3"
b11 <"
b100000 U
b100 W
b110100000000011111 ~
b100 >"
b100 5"
b1111 4"
b11 0"
b11100010000000110100 9
b11100010000000110100000000011111 )
b11100010000000110100000000011111 3
b11100010000000110100000000011111 n
b11100010000000110100000000011111 I"
b11000 l
b11000 ,"
b11000 ."
b11100 j
b11100 *"
b11100 ;"
b11000 k
b11000 &"
b11000 ("
b11000 +"
b10100 (
b10100 0
b10100 m
b10100 '"
b10100 /"
b10100 H"
1$
#60000
0$
#65000
b111111110 f
b111111110 #"
b111111110 9"
b111111110 '
b111111110 .
b111111110 g
b111111110 $"
b111111110 F"
bx0 O
b0x0 7
b0x0 @
b0x0 G
b0x0 q
b0x0 {
xt
b11000100 e
b11000100 -"
b11000100 :"
b11000100 ?"
b11000100 w
b11000100 #
b11000100 *
b11000100 6
b11000100 p
b11000100 |
b11000100 8"
b11000100 E"
05
b10010 c
b10010 y
b10010 D"
b0 8
b0 A
b0 \
b0 _
b0 s
b10010 ^
b100 o
b100 !"
b100 C"
b100 h
b100 7"
b100 ="
b1000 U
b101 W
b100000110101000000000100 ~
b101 >"
b101 5"
b100 4"
b11100000100000110101 9
b11100000100000110101000000000100 )
b11100000100000110101000000000100 3
b11100000100000110101000000000100 n
b11100000100000110101000000000100 I"
b10010 !
b10010 &
b10010 +
b10010 b
b10010 @"
b10010 B"
b10010 G"
b11100 l
b11100 ,"
b11100 ."
b100000 j
b100000 *"
b100000 ;"
b11100 k
b11100 &"
b11100 ("
b11100 +"
b11000 (
b11000 0
b11000 m
b11000 '"
b11000 /"
b11000 H"
1$
#70000
0$
#75000
bx0 O
0u
0S
0P
0x
b0 R
b111111110 '
b111111110 .
b111111110 g
b111111110 $"
b111111110 F"
b11111110 e
b11111110 -"
b11111110 :"
b11111110 ?"
b11111110 f
b11111110 #"
b11111110 9"
b11111110 r
b11111110 ""
b0 c
b0 y
b0 D"
b0 C
b0x0 7
b0x0 @
b0x0 G
b0x0 q
b0x0 {
0v
b11000100 #
b11000100 *
b11000100 6
b11000100 p
b11000100 |
b11000100 8"
b11000100 E"
b1 4
b1 >
b1 Y
b1 `
b1 }
15
11
0[
12
b0 !
b0 &
b0 +
b0 b
b0 @"
b0 B"
b0 G"
b11000100 w
b11000100 d
b11000100 z
b11000100 A"
b0 ?
b0 E
b0 ]
b0 8
b0 A
b0 \
b0 _
b0 s
b11110001 ^
b0 o
b0 !"
b0 C"
b0 h
b0 7"
b0 ="
b101 i
b101 3"
b101 <"
b1 V
b11101 U
b110 W
b110101010110000000000000 ~
b110 >"
b110 5"
b0 4"
b101 0"
b11100101110101010110 9
b11100101110101010110000000000000 )
b11100101110101010110000000000000 3
b11100101110101010110000000000000 n
b11100101110101010110000000000000 I"
b100000 l
b100000 ,"
b100000 ."
b100100 j
b100100 *"
b100100 ;"
b100000 k
b100000 &"
b100000 ("
b100000 +"
b11100 (
b11100 0
b11100 m
b11100 '"
b11100 /"
b11100 H"
1$
#80000
0$
#85000
b1 e
b1 -"
b1 :"
b1 ?"
b1 f
b1 #"
b1 9"
b1 r
b1 ""
b11000101 #
b11000101 *
b11000101 6
b11000101 p
b11000101 |
b11000101 8"
b11000101 E"
b11000101 w
b1 c
b1 y
b1 D"
b11111111 !
b11111111 &
b11111111 +
b11111111 b
b11111111 @"
b11111111 B"
b11111111 G"
b1 o
b1 !"
b1 C"
b1 h
b1 7"
b1 ="
b111 W
b110101010111000000000001 ~
b111 >"
b111 5"
b1 4"
b11100101110101010111 9
b11100101110101010111000000000001 )
b11100101110101010111000000000001 3
b11100101110101010111000000000001 n
b11100101110101010111000000000001 I"
b100100 l
b100100 ,"
b100100 ."
b101000 j
b101000 *"
b101000 ;"
b100100 k
b100100 &"
b100100 ("
b100100 +"
b100000 (
b100000 0
b100000 m
b100000 '"
b100000 /"
b100000 H"
1$
#90000
0$
#95000
1S
1P
b11 C
bx '
bx .
bx g
bx $"
bx F"
b11111101 e
b11111101 -"
b11111101 :"
b11111101 ?"
b11 ?
b11 E
b11 ]
b1 8
b1 A
b1 \
b1 _
b1 s
bx f
bx #"
bx 9"
b11111101 #
b11111101 *
b11111101 6
b11111101 p
b11111101 |
b11111101 8"
b11111101 E"
b0 4
b0 >
b0 Y
b0 `
b0 }
05
01
1[
02
b1 c
b1 y
b1 D"
b1 !
b1 &
b1 +
b1 b
b1 @"
b1 B"
b1 G"
b11111101 w
b11111110 d
b11111110 z
b11111110 A"
b10010 ^
b111 o
b111 !"
b111 C"
b111 h
b111 7"
b111 ="
b110 i
b110 3"
b110 <"
b0 V
b101 U
b0 W
b10101100000000000000111 ~
b0 >"
b0 5"
b111 4"
b110 0"
b11100000010101100000 9
b11100000010101100000000000000111 )
b11100000010101100000000000000111 3
b11100000010101100000000000000111 n
b11100000010101100000000000000111 I"
b101000 l
b101000 ,"
b101000 ."
b101100 j
b101100 *"
b101100 ;"
b101000 k
b101000 &"
b101000 ("
b101000 +"
b100100 (
b100100 0
b100100 m
b100100 '"
b100100 /"
b100100 H"
1$
#100000
0$
#105000
bx0 O
0u
0x
b1 R
b0 e
b0 -"
b0 :"
b0 ?"
12"
0S
0P
b11111111111111111111111111010000 c
b11111111111111111111111111010000 y
b11111111111111111111111111010000 D"
b1x0 7
b1x0 @
b1x0 G
b1x0 q
b1x0 {
1v
b0 #
b0 *
b0 6
b0 p
b0 |
b0 8"
b0 E"
b1 -
b1 ;
b1 X
b1 a
b10 4
b10 >
b10 Y
b10 `
b10 }
15
0:
1Z
0[
1<
b0 C
0,
b10010 !
b10010 &
b10010 +
b10010 b
b10010 @"
b10010 B"
b10010 G"
b0 w
b110000 d
b110000 z
b110000 A"
b0 ?
b0 E
b0 ]
b0 8
b0 A
b0 \
b0 _
b0 s
b1101000100 ^
0F
b11111111111111111111111111010000 o
b11111111111111111111111111010000 !"
b11111111111111111111111111010000 C"
b100 h
b100 7"
b100 ="
b1111 i
b1111 3"
b1111 <"
b10 V
b101111 U
b1111 W
b1011 B
b1011 H
b111111111111111111110100 ~
b1111 >"
b1111 5"
b100 4"
b1111 0"
b10111010111111111111 9
b10111010111111111111111111110100 )
b10111010111111111111111111110100 3
b10111010111111111111111111110100 n
b10111010111111111111111111110100 I"
b101100 l
b101100 ,"
b101100 ."
xN
b110000 j
b110000 *"
b110000 ;"
b101100 k
b101100 &"
b101100 ("
b101100 +"
b101000 (
b101000 0
b101000 m
b101000 '"
b101000 /"
b101000 H"
b0x0 D
b0x0 I
bx0 Q
1$
#110000
0$
#115000
1/
b100 c
b100 y
b100 D"
b11111111 !
b11111111 &
b11111111 +
b11111111 b
b11111111 @"
b11111111 B"
b11111111 G"
1F
b100 o
b100 !"
b100 C"
b1 h
b1 7"
b1 ="
b100000 U
b0 W
b1100 B
b1100 H
b0 R
b111000 e
b111000 -"
b111000 :"
b111000 ?"
b1 ~
b0 >"
b0 5"
b1 4"
b0 0"
b11001010000000000000 9
b0x0 7
b0x0 @
b0x0 G
b0x0 q
b0x0 {
0v
b111000 #
b111000 *
b111000 6
b111000 p
b111000 |
b111000 8"
b111000 E"
b11001010000000000000000000000001 )
b11001010000000000000000000000001 3
b11001010000000000000000000000001 n
b11001010000000000000000000000001 I"
b111000 w
b110100 d
b110100 z
b110100 A"
b111000 l
b111000 ,"
b111000 ."
b110100 j
b110100 *"
b110100 ;"
b110000 k
b110000 &"
b110000 ("
b110000 +"
b101100 (
b101100 0
b101100 m
b101100 '"
b101100 /"
b101100 H"
1$
#120000
0$
#125000
bx0 O
0u
b0 R
b0x0 7
b0x0 @
b0x0 G
b0x0 q
b0x0 {
0x
b100 i
b100 3"
b100 <"
0/
02"
16"
1"
0<
b10 -
b10 ;
b10 X
b10 a
b1 4
b1 >
b1 Y
b1 `
b1 }
11
1=
0Z
b1101110 c
b1101110 y
b1101110 D"
b11111110 !
b11111110 &
b11111110 +
b11111110 b
b11111110 @"
b11111110 B"
b11111110 G"
b10011101000 ^
b111100 l
b111100 ,"
b111100 ."
b1101110 o
b1101110 !"
b1101110 C"
b110 h
b110 7"
b110 ="
b1 V
b11000 U
b110 W
b1110 B
b1110 H
bx e
bx -"
bx :"
bx ?"
b100001000110000001101110 ~
b110 >"
b110 5"
b1110 4"
b100 0"
b11100101100001000110 9
b10000000 #
b10000000 *
b10000000 6
b10000000 p
b10000000 |
b10000000 8"
b10000000 E"
b11100101100001000110000001101110 )
b11100101100001000110000001101110 3
b11100101100001000110000001101110 n
b11100101100001000110000001101110 I"
b10000000 w
b10010 d
b10010 z
b10010 A"
b1000000 j
b1000000 *"
b1000000 ;"
b111100 k
b111100 &"
b111100 ("
b111100 +"
b111000 (
b111000 0
b111000 m
b111000 '"
b111000 /"
b111000 H"
1$
#130000
0$
#135000
bx O
x/
xS
xP
xu
x<
bx C
xx
bx R
06"
x,
bx ?
bx E
bx ]
bx 8
bx A
bx \
bx _
bx s
bx 7
bx @
bx G
bx q
bx {
xv
bx #
bx *
bx 6
bx p
bx |
bx 8"
bx E"
b0 -
b0 ;
b0 X
b0 a
b0 4
b0 >
b0 Y
b0 `
b0 }
05
01
1:
0=
1[
0"
bx c
bx y
bx D"
bx !
bx &
bx +
bx b
bx @"
bx B"
bx G"
bx w
bx d
bx z
bx A"
b10010 ^
xF
b0xxxxxxxx o
b0xxxxxxxx !"
b0xxxxxxxx C"
bx h
bx 7"
bx ="
bx i
bx 3"
bx <"
bx V
bx U
bx W
bx B
bx H
bx ~
bx >"
bx 5"
bx 4"
bx 0"
bx 9
bx e
bx -"
bx :"
bx ?"
bx )
bx 3
bx n
bx I"
bx l
bx ,"
bx ."
bx f
bx #"
bx 9"
b1000100 j
b1000100 *"
b1000100 ;"
b1000000 k
b1000000 &"
b1000000 ("
b1000000 +"
b111100 (
b111100 0
b111100 m
b111100 '"
b111100 /"
b111100 H"
bx '
bx .
bx g
bx $"
bx F"
1$
#140000
0$
#145000
bx j
bx *"
bx ;"
bx k
bx &"
bx ("
bx +"
bx (
bx 0
bx m
bx '"
bx /"
bx H"
1$
#150000
0$
#155000
1$
#160000
0$
#165000
1$
#170000
0$
#175000
1$
#180000
0$
#185000
1$
#190000
0$
#195000
1$
#200000
0$
#205000
1$
#210000
0$
#215000
1$
#220000
0$
#225000
1$
#230000
0$
#235000
1$
#240000
0$
#245000
1$
#250000
0$
#255000
1$
#260000
0$
#265000
1$
#270000
0$
#275000
1$
#280000
0$
#285000
1$
#290000
0$
#295000
1$
#300000
0$
#305000
1$
#306000
